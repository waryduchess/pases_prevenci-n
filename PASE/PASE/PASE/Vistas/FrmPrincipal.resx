<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>